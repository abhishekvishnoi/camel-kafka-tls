kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/abhishekvishnoi/camel-kafka-tls.git'
    deployment.kubernetes.io/revision: '15'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"camel-kafka-tls-git:latest","namespace":"camel-code"},"fieldPath":"spec.template.spec.containers[?(@.name==\"camel-kafka-tls-git\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  name: camel-kafka-tls-git
  namespace: camel-code
  labels:
    app: camel-kafka-tls-git
    app.kubernetes.io/component: camel-kafka-tls-git
    app.kubernetes.io/instance: camel-kafka-tls-git
    app.kubernetes.io/name: camel-kafka-tls-git
    app.kubernetes.io/part-of: camel-kafka-tls-git-app
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: openjdk-17-ubi8
spec:
  replicas: 1
  selector:
    matchLabels:
      app: camel-kafka-tls-git
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: camel-kafka-tls-git
        deploymentconfig: camel-kafka-tls-git
    spec:
      volumes:
        - name: kafka-jks-secret
          secret:
            secretName: kafka-jks-secret
            defaultMode: 420
      containers:
        - name: camel-kafka-tls-git
          image: >-
            image-registry.openshift-image-registry.svc:5000/camel-code/camel-kafka-tls-git@sha256:0c5d52546f16c115f8da0e0178cc9576eae7e4cf2737c8a1c0b0fe9124892905
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: kafka-jks-secret
              readOnly: true
              mountPath: /home/jboss
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600